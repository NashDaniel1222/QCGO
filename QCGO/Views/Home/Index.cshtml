@model IEnumerable<QCGO.Models.Spot>

@{
    ViewData["Title"] = "QCGO";
}

<h1>Spots</h1>

@{
    var q = ViewData["SearchQuery"] as string;
    var activeTag = ViewData["tag"] as string;
    var activeDistrict = ViewData["district"] as string;
    if (!string.IsNullOrEmpty(q) || !string.IsNullOrEmpty(activeTag) || !string.IsNullOrEmpty(activeDistrict))
    {
        <p>
            Showing @Model?.Count() result(s)
            @if (!string.IsNullOrEmpty(q))
            {
                <text> for "@q"</text>
            }
            @if (!string.IsNullOrEmpty(activeTag))
            {
                <text> | Tag: @activeTag</text>
            }
            @if (!string.IsNullOrEmpty(activeDistrict))
            {
                <text> | District: @activeDistrict</text>
            }
        </p>
    }
}

@if (Model != null && Model.Any())
{
    <div class="spots-grid">
        @foreach (var spot in Model)
        {
            var tagList = spot.Tags != null ? string.Join(",", spot.Tags) : "";
            <a class="spot-card-link" href="@Url.Action("Details", "Home", new { id = spot.Id })">
                <div class="spot-card" data-tags="@tagList" data-district="@spot.District">
                    <div class="spot-thumb" aria-hidden="true">
                        @if (!string.IsNullOrEmpty(spot.ImageUrl))
                        {
                            var encoded = System.Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(spot.ImageUrl));
                            <img src="@Url.Action("Fetch", "Image", new { b64 = encoded })" alt="@spot.Name" />
                        }
                    </div>
                    <div class="spot-info">
                        <div class="spot-name">@spot.Name</div>
                        <div class="spot-district">District: @spot.District</div>
                    </div>
                </div>
            </a>
        }
    </div>

    <!-- 🗺️ Leaflet Map Section -->
    <h2>Map of Tourist Spots</h2>
    <div style="display:flex; align-items:center; gap:12px; margin-bottom:8px;">
        <div id="markerBadge" style="background:#0d6efd; color:#fff; padding:6px 10px; border-radius:999px; font-weight:600;">Markers: 0</div>
        <div style="flex:1"></div>
    </div>
    <div id="map" style="height: 500px; border-radius: 8px; margin-top: 6px;"></div>

    <!-- Leaflet CDN -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

    <script>
        // Initialize the map centered on Quezon City
        var map = L.map('map').setView([14.6760, 121.0437], 12);

        // Add free OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Pass the spots data from C# to JavaScript
        var spots = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model, new System.Text.Json.JsonSerializerOptions { PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase }));
        if (spots && !Array.isArray(spots)) {
            spots = [spots];
        }

        var markerCount = 0;
        var markerBadgeEl = document.getElementById('markerBadge');

        if (Array.isArray(spots)) {
            spots.forEach(function (s) {
                var lat = null, lng = null;
                if (s && s.coordinates) {
                    lat = s.coordinates.lat ?? s.coordinates.Lat ?? null;
                    lng = s.coordinates.lng ?? s.coordinates.Lng ?? null;
                }
                lat = lat ?? s.latitude ?? s.Latitude ?? null;
                lng = lng ?? s.longitude ?? s.Longitude ?? null;

                if (lat !== null && typeof lat !== 'number') lat = Number(lat);
                if (lng !== null && typeof lng !== 'number') lng = Number(lng);

                if (typeof lat === 'number' && typeof lng === 'number' && isFinite(lat) && isFinite(lng)) {
                    if (lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {
                        L.marker([lat, lng])
                            .addTo(map)
                            .bindPopup("<b>" + (s.name || '') + "</b><br>" + (s.district || ''));
                        markerCount++;
                        if (markerBadgeEl) markerBadgeEl.textContent = 'Markers: ' + markerCount;
                    }
                }
            });
        }

        // Fit map bounds to markers
        var markers = Object.values(map._layers).filter(function (l) { return l instanceof L.Marker; });
        if (markers.length > 0) {
            var group = new L.featureGroup(markers);
            map.fitBounds(group.getBounds().pad(0.1));
        }
    </script>
}
else
{
    <p>No spots to display.</p>
}