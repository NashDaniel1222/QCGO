@{
    Layout = null;
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
    // Get all selected districts as a list
    var selectedDistricts = Context.Request.Query["district"].ToString().Split(',', StringSplitOptions.RemoveEmptyEntries).ToList();
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - QCGO</title>
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<body>
    <div class="app-shell">
    <aside class="sidebar" role="navigation" aria-label="Main sidebar">
            <button class="sidebar-toggle" type="button" title="Expand sidebar" aria-label="Expand sidebar"
                onclick="toggleSidebar()">
                <!-- Hamburger icon -->
                <svg width="22" height="22" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true">
                    <rect y="4" width="24" height="2" rx="1" fill="currentColor" />
                    <rect y="11" width="24" height="2" rx="1" fill="currentColor" />
                    <rect y="18" width="24" height="2" rx="1" fill="currentColor" />
                </svg>
            </button>
            <div class="sidebar-content">
                @{ var currentTag = Context.Request.Query["tag"].ToString(); }
                <div class="sidebar-section">
                    <button class="sidebar-hide-btn" onclick="toggleSidebar()">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M6 19L18 12L6 5V19Z" fill="currentColor" /></svg>
                        Hide Filters
                    </button>
                </div>
                <div class="sidebar-section">
                    <div class="sidebar-title">
                        <svg width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                            <rect x="3" y="3" width="7" height="7" rx="2" />
                            <rect x="14" y="3" width="7" height="7" rx="2" />
                            <rect x="14" y="14" width="7" height="7" rx="2" />
                            <rect x="3" y="14" width="7" height="7" rx="2" />
                        </svg>
                        Categories
                    </div>
                    <div class="sidebar-tags">
                        @{
                            var tags = ViewBag.TopTags as List<string>;
                            if (tags == null || tags.Count == 0)
                            {
                                tags = new List<string> { "Art", "Astronomy", "Nature", "Oceans", "Other", "Sunset", "Urban" };
                            }
                        }
                        @foreach (var tag in tags)
                        {
                            if (currentTag == tag)
                            {
                                <form method="get" action="@Url.Action("Index","Home")" class="sidebar-tag-form">
                                    @* Remove tag filter by not including tag param *@
                                    @if (!string.IsNullOrEmpty(Context.Request.Query["q"])) { <input type="hidden" name="q" value="@(Context.Request.Query["q"].ToString())" /> }
                                    @foreach (var district in selectedDistricts)
                                    {
                                        <input type="hidden" name="district" value="@district" />
                                    }
                                    <button type="submit" class="sidebar-tag active">@tag</button>
                                </form>
                            }
                            else
                            {
                                <form method="get" action="@Url.Action("Index","Home")" class="sidebar-tag-form">
                                    <input type="hidden" name="tag" value="@tag" />
                                    @if (!string.IsNullOrEmpty(Context.Request.Query["q"])) { <input type="hidden" name="q" value="@(Context.Request.Query["q"].ToString())" /> }
                                    @foreach (var district in selectedDistricts)
                                    {
                                        <input type="hidden" name="district" value="@district" />
                                    }
                                    <button type="submit" class="sidebar-tag">@tag</button>
                                </form>
                            }
                        }
                    </div>
                </div>
                <div class="sidebar-section">
                    <div class="sidebar-title">
                        <svg width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                            <circle cx="12" cy="12" r="10" />
                            <path d="M2 12h20" />
                        </svg>
                        District
                    </div>
                    <div class="sidebar-tags">
                        @{
                            var districts = new List<string> { "District 1", "District 2", "District 3", "District 4", "District 5", "District 6" };
                        }
                        @foreach (var district in districts)
                        {
                            var isSelected = selectedDistricts.Contains(district);
                            
                            <form method="get" action="@Url.Action("Index","Home")" class="sidebar-tag-form">
                                @if (!string.IsNullOrEmpty(Context.Request.Query["q"])) 
                                { 
                                    <input type="hidden" name="q" value="@(Context.Request.Query["q"].ToString())" /> 
                                }
                                @if (!string.IsNullOrEmpty(currentTag)) 
                                { 
                                    <input type="hidden" name="tag" value="@currentTag" /> 
                                }
                                
                                @foreach (var selectedDistrict in selectedDistricts)
                                {
                                    if (selectedDistrict != district) // Include all other selected districts
                                    {
                                        <input type="hidden" name="district" value="@selectedDistrict" />
                                    }
                                }
                                
                                @if (!isSelected)
                                {
                                    <input type="hidden" name="district" value="@district" />
                                }
                                
                                <button type="submit" class="sidebar-tag @(isSelected ? "active" : "")">@district</button>
                            </form>
                        }
                        
                        @* Clear all districts button *@
                        @if (selectedDistricts.Any())
                        {
                            <form method="get" action="@Url.Action("Index","Home")" class="sidebar-tag-form">
                                @if (!string.IsNullOrEmpty(Context.Request.Query["q"])) 
                                { 
                                    <input type="hidden" name="q" value="@(Context.Request.Query["q"].ToString())" /> 
                                }
                                @if (!string.IsNullOrEmpty(currentTag)) 
                                { 
                                    <input type="hidden" name="tag" value="@currentTag" /> 
                                }
                                <button type="submit" class="sidebar-tag clear-all">Clear All</button>
                            </form>
                        }
                    </div>
                </div>
                <div class="sidebar-section">
                    <div class="sidebar-title">
                        <svg width="18" height="18" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                            <path d="M3 6h18M3 12h18M3 18h18" />
                        </svg>
                        Sort by
                    </div>
                    <div class="sidebar-tags">
                        <button>Grade</button><button>Number of visits</button><button>Recent</button>
                    </div>
                </div>
            </div>
        </aside>
        <div class="main-area">
            <header class="floating-header">
                <div class="header-left">QCGO</div>
                <nav class="header-center" aria-label="Main navigation">
                    <a href="@Url.Action("Index", "Home")"
                       class="header-nav-btn @(currentAction == "Index" ? "active" : "")"
                       aria-current="@(currentAction == "Index" ? "page" : null)">
                        Home
                    </a>
                    @* Add a Spot removed *@
                </nav>
                <div class="header-right">
                    <form class="header-search" role="search" method="get" action="@Url.Action("Index","Home")">
                        <input type="text" name="q" value="@(Context.Request.Query["q"].ToString())" placeholder="Search..." aria-label="Search" />
                        @* preserve tag and district filters when searching *@
                        @if (!string.IsNullOrEmpty(Context.Request.Query["tag"]))
                        {
                            <input type="hidden" name="tag" value="@(Context.Request.Query["tag"].ToString())" />
                        }
                        @foreach (var district in selectedDistricts)
                        {
                            <input type="hidden" name="district" value="@district" />
                        }
                        <button type="submit" aria-label="Search">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="#2563eb" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"/><path d="M21 21l-4.35-4.35"/></svg>
                        </button>
                    </form>
                    <div class="header-actions">
                        @if (User?.Identity?.IsAuthenticated == true)
                        {
                            var username = User.Identity.Name ?? "";
                            <div class="account-pill" title="@username">
                                <button class="account-icon" aria-label="Account">
                                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="#111" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" xmlns="http://www.w3.org/2000/svg"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>
                                </button>
                                <div class="account-popover">
                                    <div class="account-username">@username</div>
                                    <form method="post" asp-controller="Account" asp-action="Logout">
                                        <button type="submit" class="btn logout-btn">Logout</button>
                                    </form>
                                </div>
                            </div>
                        }
                        else
                        {
                            <a class="btn header-login" href="@Url.Action("Login","Account")">Login</a>
                        }
                    </div>
                </div>
            </header>
            <main class="content">
                @RenderBody()
            </main>
        </div>
    </div>
    <script src="~/js/site.js"></script>
    <script>
    // Sidebar state persistence
    document.addEventListener('DOMContentLoaded', function() {
        var sidebar = document.querySelector('.sidebar');
        var toggleBtn = document.querySelector('.sidebar-toggle');
        // Restore state
        if (localStorage.getItem('sidebar-collapsed') === 'true') {
            sidebar.classList.add('collapsed');
        } else {
            sidebar.classList.remove('collapsed');
        }
        // Patch toggleSidebar to save state
        window.toggleSidebar = function() {
            var expanded = !sidebar.classList.contains('collapsed');
            if (expanded) {
                sidebar.classList.add('collapsed');
                toggleBtn.setAttribute('aria-label','Expand sidebar');
                toggleBtn.setAttribute('title','Expand sidebar');
                localStorage.setItem('sidebar-collapsed', 'true');
            } else {
                sidebar.classList.remove('collapsed');
                toggleBtn.setAttribute('aria-label','Collapse sidebar');
                toggleBtn.setAttribute('title','Collapse sidebar');
                localStorage.setItem('sidebar-collapsed', 'false');
            }
        }
    });
    </script>
    @RenderSection("Scripts", required: false)
</body>

</html>